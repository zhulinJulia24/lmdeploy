name: daily_ete_test

on:
  workflow_dispatch:
    inputs:
      repo_org:
        required: false
        description: 'Tested repository organization name. Default is InternLM'
        type: string
        default: 'InternLM/lmdeploy'
      repo_ref:
        required: false
        description: 'Set branch or tag or commit id. Default is "main"'
        type: string
        default: 'main'
      backend:
        required: true
        description: 'Set backend testcase filter: turbomind or pytorch or turbomind, pytorch. Default is "["turbomind", "pytorch"]"'
        type: string
        default: "['turbomind', 'turbomind-vl']"
      model:
        required: true
        description: 'Set testcase module filter: chat, restful, pipeline, quantization. Default contains all models'
        type: string
        default: "['restful']"
      offline_mode:
        required: true
        description: 'Whether start a offline mode, if true, you should prepare code and whl package by yourself'
        type: boolean
        default: false
      regression_func:
        required: true
        description: 'regression functions'
        type: string
        default: "['tools','restful','pipeline','benchmark','evaluation']"
  schedule:
    - cron:  '00 16 * * 0-4'

env:
  HOST_PIP_CACHE_DIR: /nvme/github-actions/pip-cache
  HOST_LOCALTIME: /usr/share/zoneinfo/Asia/Shanghai
  OUTPUT_FOLDER: cuda11.8_dist_${{ github.run_id }}
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
  REPORT_DIR: /nvme/qa_test_models/test-reports/${{ github.run_id }}
  COV_PARAM: --cov /opt/py3/lib/python3.10/site-packages/lmdeploy
  FAIL_CONFIG: ${{ github.event_name == 'schedule' && github.run_attempt != 1 && '--lf --lfnf none' || '--lf'}}
  TEST_CODE_PATH: /nvme/qa_test_models/test_pkg/lmdeploy
  OFFLINE_CODE_PATH: /nvme/qa_test_models/offline_pkg/lmdeploy

jobs:
  test_tools:
    if: ${{!cancelled() && (github.event_name == 'schedule' || contains(fromJSON(github.event.inputs.regression_func), 'tools'))}}
    runs-on: [self-hosted, linux-a100]
    timeout-minutes: 450
    strategy:
      fail-fast: false
      matrix:
        backend: ${{ fromJSON(inputs.backend) || fromJSON('["turbomind", "turbomind-vl"]')}}
        model: ${{ fromJSON(inputs.model) || fromJSON('["restful","local_case"]')}}
    steps:
      - name: print
        run: |
          echo ${{matrix.backend}}
          echo ${{matrix.model}}

  test_tools2:
    if: ${{!cancelled() && (github.event_name == 'schedule' || contains(fromJSON(github.event.inputs.regression_func), 'tools'))}}
    runs-on: [self-hosted, linux-a100]
    timeout-minutes: 450
    strategy:
      fail-fast: false
      matrix:
        backend: ${{ fromJSON(inputs.backend) || fromJSON('["turbomind", "turbomind-vl"]')}}
        model: ${{ fromJSON(inputs.model) || fromJSON('["restful"]')}}
        include:
          - backend: turbomind
            model: local_case
    steps:
      - name: print
        run: |
          echo ${{matrix.backend}}
          echo ${{matrix.model}}

  test_tools3:
    if: ${{!cancelled() && (github.event_name == 'schedule' || contains(fromJSON(github.event.inputs.regression_func), 'tools'))}}
    runs-on: [self-hosted, linux-a100]
    timeout-minutes: 450
    strategy:
      fail-fast: false
      matrix:
        backend: ${{ fromJSON(inputs.backend) || fromJSON('["turbomind", "turbomind-vl"]')}}
        model: ${{ fromJSON(inputs.model) || fromJSON('["restful","local_case"]')}}
        include:
          - os: 11
            os2: 22
          - os1: 12
            os2: 23
    steps:
      - name: print
        run: |
          echo ${{matrix.backend}}
          echo ${{matrix.model}}
          echo ${{matrix.os}}
          echo ${{matrix.os2}}
         
